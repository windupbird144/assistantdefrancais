services:
  # Discord Bot Servicef
  discord-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: assistantdefrancais
    env_file:
      - path: .env.default
        required: true
      - path: .env
        required: true
    volumes:
      - ./:/app
    networks:
      - monitoring-network
    restart: unless-stopped
    depends_on:
      - jaeger
      - prometheus

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"  # UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=false # Set to false for persistence
      - BADGER_DIRECTORY_VALUE=/badger/data/values # Directory for values
      - BADGER_DIRECTORY_KEY=/badger/data/keys # Directory for keys
    volumes:
      - jaeger-badger-data:/badger # Mount the named volume to the Badger directory
    restart: unless-stopped
    networks:
      - monitoring-network
    depends_on:
      prepare-data-dir:
        condition: service_completed_successfully
  
  # Workaround for badger file permissions
  # See https://github.com/jaegertracing/jaeger/blob/v1.67.0/internal/storage/v1/badger/docs/storage-file-non-root-permission.md
  prepare-data-dir:
    # Run this step as root so that we can change the directory owner.
    user: root
    image: alpine:latest
    command: "/bin/sh -c 'mkdir -p /badger/data && touch /badger/data/.initialized && chown -R 10001:10001 /badger/data'"
    volumes:
      - jaeger-badger-data:/badger

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring-network

networks:
  monitoring-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
  jaeger-badger-data:

