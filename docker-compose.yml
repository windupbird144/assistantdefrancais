services:
  # Discord Bot Servicef
  discord-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: assistantdefrancais
    environment:
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
      - OTEL_SERVICE_NAME=assistantdefrancais
      - PROMETHEUS_ENDPOINT=http://prometheus:9090
    volumes:
      - ./:/app
    networks:
      - monitoring-network
    restart: unless-stopped
    depends_on:
      - jaeger
      - prometheus

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"  # UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - SPA_STORAGE_TYPE=badger
        - BADGER_EPHEMERAL=false # Set to false for persistence
      - BADGER_DIRECTORY_VALUE=/badger/data # Directory for values
      - BADGER_DIRECTORY_KEY=/badger/key # Directory for keys
    volumes:
      - jaeger-badger-data:/badger # Mount the named volume to the Badger directory
    restart: unless-stopped
    networks:
      - monitoring-network

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring-network
    restart: unless-stopped

  # Optional: Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - monitoring-network
    restart: unless-stopped
    depends_on:
      - prometheus

networks:
  monitoring-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
  jaeger-badger-data:

